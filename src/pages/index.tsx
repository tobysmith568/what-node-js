import styled from "@emotion/styled";
import type { NextPage } from "next";
import Head from "next/head";
import Loading from "../Loading";
import NodeVersion from "../NodeVersion";
import useVersions from "../useVersions";

const Home: NextPage = () => {
  const versions = useVersions();

  return (
    <div style={{ textAlign: "center" }}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>What Version of Node.JS?</h1>

      {versions === null && <Loading />}

      {versions && (
        <div>
          <h2>If you&apos;re a...</h2>

          <Grid>
            <div>
              <h3>Library Maintainer</h3>
              Then you should use
              {versions.currentVersions.map(v => (
                <NodeVersion
                  key={v.version}
                  version={v.version}
                  codename={v.codename}
                  until={v.lts!}
                />
              ))}
              But also run your tests against
              {versions.activeVersions.map(v => (
                <NodeVersion
                  key={v.version}
                  version={v.version}
                  codename={v.codename}
                  until={v.end!}
                />
              ))}
              {versions.maintenanceVersions.map(v => (
                <NodeVersion
                  key={v.version}
                  version={v.version}
                  codename={v.codename}
                  until={v.end!}
                />
              ))}
            </div>
            <div>
              <h3>Website/Service Maker</h3>
              Then you should use
              {versions.activeVersions.map(v => (
                <NodeVersion
                  key={v.version}
                  version={v.version}
                  codename={v.codename}
                  until={v.maintenance!}
                />
              ))}
              But it is OK if you use
              {versions.maintenanceVersions.map(v => (
                <NodeVersion
                  key={v.version}
                  version={v.version}
                  codename={v.codename}
                  until={v.end!}
                />
              ))}
              {versions.activeVersions.map(v => (
                <NodeVersion
                  key={v.version}
                  version={v.version}
                  codename={v.codename}
                  until={v.end!}
                />
              ))}
            </div>
          </Grid>

          <div>
            <h3>No one should use</h3>
            {versions.deadVersions.map(v => (
              <NodeVersion key={v.version} version={v.version} codename={v.codename} />
            ))}
          </div>
        </div>
      )}
    </div>
  );
};
export default Home;

const Grid = styled.div`
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
`;
